# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Flutter

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  checks:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v3

      - name: Java version
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      - name: Flutter version
        uses: subosito/flutter-action@v2.12.0
        with:
          channel: 'stable'

      - name: Flutter Stable
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 2
          command: flutter channel stable

      - name: Flutter Upgrade
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 2
          command: flutter upgrade

      - name: Setup OnePub
        run: |
          dart pub global activate onepub
          echo "ONEPUB_TOKEN=${{ secrets.ONEPUB_TOKEN }}" >> $GITHUB_ENV
          dart pub global run onepub import
          echo "Verifying OnePub setup..."
          ls -la $PUB_CACHE/credentials/
          cat $PUB_CACHE/credentials/credentials.json || echo "No credentials file found"
          dart pub global run onepub whoami || echo "OnePub whoami failed"

      - name: Flutter Pub Get
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 2
          command: flutter pub get

      - name: Check Flutter and Dart versions
        run: |
          flutter --version
          DART_PATH=$(dirname $(which dart))
          echo "DART_PATH=$DART_PATH" >> $GITHUB_ENV

      - name: Create a dummy .prod.env file
        run: echo -e "var BASE_URL = ''; \n var SENTRY_URL = ''; \nvar INIT_TOKEN = '';" > .prod.env

      - name: Create a dummy .staging.env file
        run: echo -e "var BASE_URL = ''; \n var SENTRY_URL = ''; \nvar INIT_TOKEN = '';" > .staging.env

      - name: Flutter clean and pub get
        run: flutter clean && flutter pub get

      - name: Generate HugeIcons
        run: flutter pub run huge_icons:generate

      - name: Run Riverpod generator
        run: flutter packages pub run build_runner build --delete-conflicting-outputs

      - name: Run Pigeon generator
        run: flutter pub run pigeon --input pigeon_conf.dart

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: flutter-artifacts
          path: build/
